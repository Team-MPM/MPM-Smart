{
  "resources": {
    "username": {
      "type": "parameter.v0",
      "value": "{username.inputs.value}",
      "inputs": {
        "value": {
          "type": "string"
        }
      }
    },
    "redis": {
      "type": "container.v0",
      "connectionString": "{redis.bindings.tcp.host}:{redis.bindings.tcp.port}",
      "image": "docker.io/library/redis:7.2",
      "args": [
        "--save",
        "60",
        "1"
      ],
      "volumes": [
        {
          "name": "Web.Host-redis-data",
          "target": "/data",
          "readOnly": false
        }
      ],
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 6379
        }
      }
    },
    "sql": {
      "type": "container.v0",
      "connectionString": "Server={sql.bindings.tcp.host},{sql.bindings.tcp.port};User ID=sa;Password={sqlPassword.value};TrustServerCertificate=true",
      "image": "mcr.microsoft.com/mssql/server:2022-latest",
      "volumes": [
        {
          "name": "Web.Host-sql-data",
          "target": "/var/opt/mssql",
          "readOnly": false
        }
      ],
      "env": {
        "ACCEPT_EULA": "Y",
        "MSSQL_SA_PASSWORD": "{sqlPassword.value}"
      },
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 1433
        }
      }
    },
    "MPM-Smart": {
      "type": "value.v0",
      "connectionString": "{sql.connectionString};Database=MPM-Smart"
    },
    "rabbitmq": {
      "type": "container.v0",
      "connectionString": "amqp://{username.value}:{rabbitMqPassword.value}@{rabbitmq.bindings.tcp.host}:{rabbitmq.bindings.tcp.port}",
      "image": "docker.io/library/rabbitmq:3.13-management",
      "volumes": [
        {
          "name": "Web.Host-rabbitmq-data",
          "target": "/var/lib/rabbitmq",
          "readOnly": false
        }
      ],
      "env": {
        "RABBITMQ_DEFAULT_USER": "{username.value}",
        "RABBITMQ_DEFAULT_PASS": "{rabbitMqPassword.value}"
      },
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 5672
        },
        "management": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "targetPort": 15672
        }
      }
    },
    "kafka": {
      "type": "container.v0",
      "connectionString": "{kafka.bindings.tcp.host}:{kafka.bindings.tcp.port}",
      "image": "docker.io/confluentinc/confluent-local:7.6.1",
      "volumes": [
        {
          "name": "Web.Host-kafka-data",
          "target": "/var/lib/kafka/data",
          "readOnly": false
        }
      ],
      "env": {
        "KAFKA_ADVERTISED_LISTENERS": "PLAINTEXT://localhost:29092,PLAINTEXT_HOST://localhost:9092"
      },
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 9092
        }
      }
    },
    "Api": {
      "type": "project.v0",
      "path": "../Web.Api/Web.Api.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        },
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        }
      }
    },
    "Web-Server": {
      "type": "project.v0",
      "path": "../Web/Web.Server/Web.Server.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "services__Api__http__0": "{Api.bindings.http.url}",
        "services__Api__https__0": "{Api.bindings.https.url}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        },
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        }
      }
    },
    "dbmanager": {
      "type": "project.v0",
      "path": "../DbManager/DbManager.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "ConnectionStrings__redis": "{redis.connectionString}",
        "ConnectionStrings__MPM-Smart": "{MPM-Smart.connectionString}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        }
      }
    },
    "sqlPassword": {
      "type": "parameter.v0",
      "value": "{sqlPassword.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "secret": true,
          "default": {
            "generate": {
              "minLength": 22
            }
          }
        }
      }
    },
    "rabbitMqPassword": {
      "type": "parameter.v0",
      "value": "{rabbitMqPassword.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "secret": true,
          "default": {
            "generate": {
              "minLength": 22
            }
          }
        }
      }
    }
  }
}