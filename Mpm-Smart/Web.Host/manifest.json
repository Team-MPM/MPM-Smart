{
  "resources": {
    "username": {
      "type": "parameter.v0",
      "value": "{username.inputs.value}",
      "inputs": {
        "value": {
          "type": "string"
        }
      }
    },
    "redis": {
      "type": "container.v0",
      "connectionString": "{redis.bindings.tcp.host}:{redis.bindings.tcp.port}",
      "image": "docker.io/library/redis:7.2",
      "args": [
        "--save",
        "60",
        "1"
      ],
      "volumes": [
        {
          "name": "Web.Host-redis-data",
          "target": "/data",
          "readOnly": false
        }
      ],
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 6379
        }
      }
    },
    "sql": {
      "type": "container.v0",
      "connectionString": "Server={sql.bindings.tcp.host},{sql.bindings.tcp.port};User ID=sa;Password={sqlPassword.value};TrustServerCertificate=true",
      "image": "mcr.microsoft.com/mssql/server:2022-latest",
      "volumes": [
        {
          "name": "Web.Host-sql-data",
          "target": "/var/opt/mssql",
          "readOnly": false
        }
      ],
      "env": {
        "ACCEPT_EULA": "Y",
        "MSSQL_SA_PASSWORD": "{sqlPassword.value}"
      },
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 1433
        }
      }
    },
    "PrimaryDatabase": {
      "type": "value.v0",
      "connectionString": "{sql.connectionString};Database=PrimaryDatabase"
    },
    "mongo": {
      "type": "container.v0",
      "connectionString": "mongodb://{mongo.bindings.tcp.host}:{mongo.bindings.tcp.port}",
      "image": "docker.io/library/mongo:7.0",
      "volumes": [
        {
          "name": "Web.Host-mongo-data",
          "target": "/data/db",
          "readOnly": false
        }
      ],
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 27017
        }
      }
    },
    "HomeDataDatabase": {
      "type": "value.v0",
      "connectionString": "{mongo.connectionString}/HomeDataDatabase"
    },
    "rabbitmq": {
      "type": "container.v0",
      "connectionString": "amqp://{username.value}:{rabbitMqPassword.value}@{rabbitmq.bindings.tcp.host}:{rabbitmq.bindings.tcp.port}",
      "image": "docker.io/library/rabbitmq:3.13-management",
      "volumes": [
        {
          "name": "Web.Host-rabbitmq-data",
          "target": "/var/lib/rabbitmq",
          "readOnly": false
        }
      ],
      "env": {
        "RABBITMQ_DEFAULT_USER": "{username.value}",
        "RABBITMQ_DEFAULT_PASS": "{rabbitMqPassword.value}"
      },
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 5672
        },
        "management": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "targetPort": 15672
        }
      }
    },
    "kafka": {
      "type": "container.v0",
      "connectionString": "{kafka.bindings.tcp.host}:{kafka.bindings.tcp.port}",
      "image": "docker.io/confluentinc/confluent-local:7.6.1",
      "volumes": [
        {
          "name": "Web.Host-kafka-data",
          "target": "/var/lib/kafka/data",
          "readOnly": false
        }
      ],
      "env": {
        "KAFKA_ADVERTISED_LISTENERS": "PLAINTEXT://localhost:29092,PLAINTEXT_HOST://localhost:9092"
      },
      "bindings": {
        "tcp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "targetPort": 9092
        }
      }
    },
    "maildev": {
      "type": "container.v0",
      "connectionString": "smtp://{maildev.bindings.smtp.host}:{maildev.bindings.smtp.port}",
      "image": "docker.io/maildev/maildev:2.0.2",
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "port": 9324,
          "targetPort": 1080
        },
        "smtp": {
          "scheme": "tcp",
          "protocol": "tcp",
          "transport": "tcp",
          "port": 9325,
          "targetPort": 1025
        }
      }
    },
    "neo4j": {
      "type": "container.v0",
      "connectionString": "neo4j://{neo4j.bindings.neo4j.host}:{neo4j.bindings.neo4j.port}",
      "image": "docker.io/neo4j:5.21.0",
      "volumes": [
        {
          "name": "data",
          "target": "/data",
          "readOnly": false
        }
      ],
      "env": {
        "NEO4J_AUTH": "neo4j/{neo4Password.value}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "port": 9326,
          "targetPort": 7474
        },
        "neo4j": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http",
          "port": 9327,
          "targetPort": 7687
        }
      }
    },
    "AuthService": {
      "type": "project.v0",
      "path": "../AuthService/AuthService.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "ConnectionStrings__redis": "{redis.connectionString}",
        "ConnectionStrings__sql": "{sql.connectionString}",
        "ConnectionStrings__rabbitmq": "{rabbitmq.connectionString}",
        "ConnectionStrings__kafka": "{kafka.connectionString}",
        "ConnectionStrings__neo4j": "{neo4j.connectionString}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http2"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http2"
        }
      }
    },
    "NotificationService": {
      "type": "project.v0",
      "path": "../NotificationService/NotificationService.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "ConnectionStrings__redis": "{redis.connectionString}",
        "ConnectionStrings__sql": "{sql.connectionString}",
        "ConnectionStrings__rabbitmq": "{rabbitmq.connectionString}",
        "ConnectionStrings__kafka": "{kafka.connectionString}",
        "ConnectionStrings__neo4j": "{neo4j.connectionString}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        }
      }
    },
    "NetworkService": {
      "type": "project.v0",
      "path": "../NetworkService/NetworkService.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "ConnectionStrings__redis": "{redis.connectionString}",
        "ConnectionStrings__sql": "{sql.connectionString}",
        "ConnectionStrings__rabbitmq": "{rabbitmq.connectionString}",
        "ConnectionStrings__kafka": "{kafka.connectionString}",
        "ConnectionStrings__neo4j": "{neo4j.connectionString}",
        "services__AuthService__http__0": "{AuthService.bindings.http.url}",
        "services__AuthService__https__0": "{AuthService.bindings.https.url}",
        "services__NotificationService__http__0": "{NotificationService.bindings.http.url}",
        "services__NotificationService__https__0": "{NotificationService.bindings.https.url}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http2"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http2"
        }
      }
    },
    "CommandService": {
      "type": "project.v0",
      "path": "../CommandService/CommandService.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "ConnectionStrings__redis": "{redis.connectionString}",
        "ConnectionStrings__sql": "{sql.connectionString}",
        "ConnectionStrings__rabbitmq": "{rabbitmq.connectionString}",
        "ConnectionStrings__kafka": "{kafka.connectionString}",
        "ConnectionStrings__neo4j": "{neo4j.connectionString}",
        "services__NetworkService__http__0": "{NetworkService.bindings.http.url}",
        "services__NetworkService__https__0": "{NetworkService.bindings.https.url}",
        "services__AuthService__http__0": "{AuthService.bindings.http.url}",
        "services__AuthService__https__0": "{AuthService.bindings.https.url}",
        "services__NotificationService__http__0": "{NotificationService.bindings.http.url}",
        "services__NotificationService__https__0": "{NotificationService.bindings.https.url}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http2"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http2"
        }
      }
    },
    "HomeDataService": {
      "type": "project.v0",
      "path": "../HomeDataService/HomeDataService.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "ConnectionStrings__redis": "{redis.connectionString}",
        "ConnectionStrings__sql": "{sql.connectionString}",
        "ConnectionStrings__rabbitmq": "{rabbitmq.connectionString}",
        "ConnectionStrings__kafka": "{kafka.connectionString}",
        "ConnectionStrings__neo4j": "{neo4j.connectionString}",
        "ConnectionStrings__HomeDataDatabase": "{HomeDataDatabase.connectionString}",
        "services__NetworkService__http__0": "{NetworkService.bindings.http.url}",
        "services__NetworkService__https__0": "{NetworkService.bindings.https.url}",
        "services__AuthService__http__0": "{AuthService.bindings.http.url}",
        "services__AuthService__https__0": "{AuthService.bindings.https.url}",
        "services__NotificationService__http__0": "{NotificationService.bindings.http.url}",
        "services__NotificationService__https__0": "{NotificationService.bindings.https.url}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http2"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http2"
        }
      }
    },
    "RoutineService": {
      "type": "project.v0",
      "path": "../RoutineService/RoutineService.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "ConnectionStrings__redis": "{redis.connectionString}",
        "ConnectionStrings__sql": "{sql.connectionString}",
        "ConnectionStrings__rabbitmq": "{rabbitmq.connectionString}",
        "ConnectionStrings__kafka": "{kafka.connectionString}",
        "ConnectionStrings__neo4j": "{neo4j.connectionString}",
        "services__NetworkService__http__0": "{NetworkService.bindings.http.url}",
        "services__NetworkService__https__0": "{NetworkService.bindings.https.url}",
        "services__AuthService__http__0": "{AuthService.bindings.http.url}",
        "services__AuthService__https__0": "{AuthService.bindings.https.url}",
        "services__CommandService__http__0": "{CommandService.bindings.http.url}",
        "services__CommandService__https__0": "{CommandService.bindings.https.url}",
        "services__HomeDataService__http__0": "{HomeDataService.bindings.http.url}",
        "services__HomeDataService__https__0": "{HomeDataService.bindings.https.url}",
        "services__NotificationService__http__0": "{NotificationService.bindings.http.url}",
        "services__NotificationService__https__0": "{NotificationService.bindings.https.url}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http2"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http2"
        }
      }
    },
    "DataGateway": {
      "type": "project.v0",
      "path": "../Web.DataGateway/Web.DataGateway.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "ConnectionStrings__redis": "{redis.connectionString}",
        "ConnectionStrings__sql": "{sql.connectionString}",
        "ConnectionStrings__rabbitmq": "{rabbitmq.connectionString}",
        "ConnectionStrings__kafka": "{kafka.connectionString}",
        "ConnectionStrings__neo4j": "{neo4j.connectionString}",
        "services__HomeDataService__http__0": "{HomeDataService.bindings.http.url}",
        "services__HomeDataService__https__0": "{HomeDataService.bindings.https.url}",
        "services__AuthService__http__0": "{AuthService.bindings.http.url}",
        "services__AuthService__https__0": "{AuthService.bindings.https.url}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        }
      }
    },
    "Api": {
      "type": "project.v0",
      "path": "../Web.Api/Web.Api.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "ConnectionStrings__redis": "{redis.connectionString}",
        "ConnectionStrings__sql": "{sql.connectionString}",
        "ConnectionStrings__rabbitmq": "{rabbitmq.connectionString}",
        "ConnectionStrings__kafka": "{kafka.connectionString}",
        "ConnectionStrings__neo4j": "{neo4j.connectionString}",
        "services__HomeDataService__http__0": "{HomeDataService.bindings.http.url}",
        "services__HomeDataService__https__0": "{HomeDataService.bindings.https.url}",
        "services__AuthService__http__0": "{AuthService.bindings.http.url}",
        "services__AuthService__https__0": "{AuthService.bindings.https.url}",
        "services__DataGateway__http__0": "{DataGateway.bindings.http.url}",
        "services__DataGateway__https__0": "{DataGateway.bindings.https.url}",
        "services__NotificationService__http__0": "{NotificationService.bindings.http.url}",
        "services__NotificationService__https__0": "{NotificationService.bindings.https.url}",
        "services__RoutineService__http__0": "{RoutineService.bindings.http.url}",
        "services__RoutineService__https__0": "{RoutineService.bindings.https.url}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        }
      }
    },
    "Web-Server": {
      "type": "project.v0",
      "path": "../Web/Web.Server/Web.Server.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "services__Api__http__0": "{Api.bindings.http.url}",
        "services__Api__https__0": "{Api.bindings.https.url}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        }
      }
    },
    "dbmanager": {
      "type": "project.v0",
      "path": "../DbManager/DbManager.csproj",
      "env": {
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES": "true",
        "OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY": "in_memory",
        "ASPNETCORE_FORWARDEDHEADERS_ENABLED": "true",
        "ConnectionStrings__redis": "{redis.connectionString}",
        "ConnectionStrings__PrimaryDatabase": "{PrimaryDatabase.connectionString}",
        "ConnectionStrings__HomeDataDatabase": "{HomeDataDatabase.connectionString}"
      },
      "bindings": {
        "http": {
          "scheme": "http",
          "protocol": "tcp",
          "transport": "http"
        },
        "https": {
          "scheme": "https",
          "protocol": "tcp",
          "transport": "http"
        }
      }
    },
    "sqlPassword": {
      "type": "parameter.v0",
      "value": "{sqlPassword.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "secret": true,
          "default": {
            "generate": {
              "minLength": 22
            }
          }
        }
      }
    },
    "rabbitMqPassword": {
      "type": "parameter.v0",
      "value": "{rabbitMqPassword.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "secret": true,
          "default": {
            "generate": {
              "minLength": 22
            }
          }
        }
      }
    },
    "neo4Password": {
      "type": "parameter.v0",
      "value": "{neo4Password.inputs.value}",
      "inputs": {
        "value": {
          "type": "string",
          "secret": true,
          "default": {
            "generate": {
              "minLength": 22
            }
          }
        }
      }
    }
  }
}