@page "/"
@layout HomePageLayout

@using ApiSchema.Usermanagement
@using Frontend.Components.Dialogs
@using Frontend.Services
@using Microsoft.AspNetCore.Components.Authorization

@inject IDialogService DialogService
@inject NavigationManager NavManager
@inject ApiAccessor Accessor

<MudContainer Class="card-container">
    <MudGrid Gutter="3">
        <MudItem xs="12" sm="4">
            <MudCard Class="card-style" Hover="true" @onclick="NavigateToLogin">
                <MudCardMedia Image="https://via.placeholder.com/150" Alt="SmartHome Schule" Class="card-media"/>
                <MudCardContent>
                    <MudText Typo="Typo.h5" Class="card-title">Schule</MudText>
                    <MudText Typo="Typo.body2" Class="card-description">SmartHome der HTL KREMS</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
        <MudItem xs="12" sm="4">
            <MudCard Class="card-style" Hover="true" @onclick="NavigateToLogin">
                <MudCardMedia Image="https://via.placeholder.com/150" Alt="SmartHome Olaf" Class="card-media"/>
                <MudCardContent>
                    <MudText Typo="Typo.h5" Class="card-title">Olaf's Zuhause</MudText>
                    <MudText Typo="Typo.body2" Class="card-description">SmartHome von Olaf</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
        <MudItem xs="12" sm="4">
            <MudCard Class="card-style" Hover="true" @onclick="NavigateToLogin">
                <MudCardMedia Image="https://via.placeholder.com/150" Alt="SmartHome Jacob" Class="card-media"/>
                <MudCardContent>
                    <MudText Typo="Typo.h5" Class="card-title">Jacob's Zuhause</MudText>
                    <MudText Typo="Typo.body2" Class="card-description">SmartHome von Jacob</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudContainer>

<MudContainer>
    <MudButton OnClick="@(() => OpenDialogAsync())" Class="mr-3 mud-theme-primary" Variant="Variant.Filled">Hinzufügen
    </MudButton>
</MudContainer>

@code {
    PermissionsModel? Permissions { get; set; }
    AuthenticationState? State { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var result = await Accessor.GetUserPermissions();
        if (result.Success)
        {
            Permissions = result.Response;
            Console.WriteLine("Inserted Permissions");
        }
        else
        {
            Console.WriteLine(result.StatusCode);
            Console.WriteLine(result.Message);
        }

        await base.OnInitializedAsync();
    }

    private void NavigateToLogin()
    {
        NavManager.NavigateTo("/Login");
        // if (builder.HostEnvironment.IsDevelopment())
        // {
        //     using var scope = app.Services.CreateScope();
        //     var storage = scope.ServiceProvider.GetRequiredService<ILocalStorageService>();
        //     await app.Services.GetRequiredService<ControllerConnectionManager>().ConnectToControllerAsync(
        //         new ControllerConnectionDetails(IPAddress.Loopback, 54321),
        //         new ControllerPasswordCredentials("admin", "admin", storage));
        // }

    }

    private Task OpenDialogAsync()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true, MaxWidth = MaxWidth.Large, FullWidth = true };

        return DialogService.ShowAsync<AddSensorDialog>("Sensor", options);
    }

}
