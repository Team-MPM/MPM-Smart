@page "/Login"
@using System.Net
@using ApiSchema.Identity
@using BackendConnectionData.Services
@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Authorization
@layout LoginLayout
@inject HttpClient Client
@inject CustomAuthStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@inject ApiAccessor accessor
@attribute [StreamRendering]

<MudForm Spacing="2" Class="Login-Form">

    <h1 class="Login-Heading">Sign In</h1>
    <MudTextField @bind-Value="@Model.UserName" T="string" Label="Username" Variant="Variant.Filled"/>
    <MudTextField @bind-Value="@Model.Password" T="string" Label="Password" InputType="InputType.Password" Variant="Variant.Filled"/>
    <div class="Login-RememberMe">
        <MudCheckBox @bind-Value="RememberMe">Remember Me?</MudCheckBox>
        <MudLink Href="#">Forgot Password?</MudLink>
    </div>
    <MudButton Class="Login-Button" OnClick="OnSubmit" Variant="Variant.Filled" Color="Color.Primary">Login</MudButton>
</MudForm>

<div class="text-danger">@ErrorMessage</div>


@code {
    public bool RememberMe { get; set; }
    private string ErrorMessage { get; set; } = "";
    private LoginModel Model { get; set; } = new LoginModel();

    public async Task OnSubmit()
    {
        ErrorMessage = "";
        var result = await accessor.Login(Model.UserName, Model.Password);
        if(result.Success)
            NavigationManager.NavigateTo("/");
        else
            ErrorMessage = ((HttpStatusCode) result.StatusCode) + ": " + result.Message!;
    }

    public class LoginModel
    {
        public string UserName { get; set; } = "";
        public string Password { get; set; } = "";
    }

}

