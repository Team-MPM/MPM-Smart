@page "/home"
@using ApiSchema
@using Frontend.Services
@using Microsoft.AspNetCore.Authorization
@using Frontend.Components.Data
@using Shared
@layout MainLayout
@attribute [Authorize]
@inject ApiAccessor Api

<h1>Dashboard</h1>

@if (m_DataPoints is null)
{
    <MudText>Loading...</MudText>
}
else
{
    <MudGrid Class="p-3">
        @foreach (var item in m_DataPoints)
        {
            <MudItem xs="12" sm="6" md="4">
                @if (DataTypeHelper.IsSeries(item.QueryType))
                {
                    <DataCell
                        T="ComboSeriesDataQueryResultDto"
                        DataPoint="item"
                        Query="new DataQueryDto(
                    Id: item.Id, 
                    Granularity: TimeSpan.FromMinutes(1), 
                    From: DateTime.UtcNow.AddHours(-1),
                    To: DateTime.UtcNow,
                    ComboOptions: item.ComboOptions, 
                    Filter: null)"/>
                }
                else
                {
                    <DataCell
                        T="ComboDataQueryResultDto"
                        DataPoint="item"
                        Query="new DataQueryDto(
                        Id: item.Id, 
                        Granularity: null, 
                        From: null,
                        To: null,
                        ComboOptions: item.ComboOptions, 
                        Filter: null)"/>
                }
            </MudItem>
        }
    </MudGrid>
}

@code {

    private List<DataPointDto>? m_DataPoints;

    protected override async Task OnInitializedAsync()
    {
        m_DataPoints = (await Api.GetDataPoints()).Response;
    }

}