@using System.IdentityModel.Tokens.Jwt
@using Blazored.LocalStorage
@using Frontend.Pages.General
@using Frontend.Services
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Nav
@inject ILocalStorageService Storage
@inject ApiAccessor api
@inject CustomAuthStateProvider authStateProvider

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @code {
                        protected override async Task OnInitializedAsync()
                        {
                            var controller = await Storage.GetItemAsync<HomePage.ControllerInfo>("current-controller");
                            if (controller is null)
                                return;
                            var token = await Storage.GetItemAsStringAsync($"authToken-{controller.Address}:{controller.Port}");
                            var refreshToken = await Storage.GetItemAsStringAsync($"refreshToken-{controller.Address}:{controller.Port}");
                            if (token is null)
                                Nav.NavigateTo("/");
                            else if (refreshToken is null)
                                Nav.NavigateTo("/");
                            else if (new JwtSecurityToken(token).ValidTo > DateTime.Now)
                                return;

                            var result = await api.TryRefreshToken();
                            if (!result.Success)
                                Nav.NavigateTo("/");
                            Nav.NavigateTo(Nav.Uri);
                        }
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Page not found!</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>
