@page "/AddDialog"
@using System.ComponentModel.DataAnnotations
@using System.Net

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">Connect to a new controller</MudText>
    </TitleContent>
    <DialogContent>
        <EditForm Model="@m_Model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator/>
            <MudTextField Class="mb-2" Label="Name" @bind-Value="m_Model.Name" For="@(() => m_Model.Name)"/>
            <MudTextField Class="mb-2" Label="Description" @bind-Value="m_Model.Desc" For="@(() => m_Model.Desc)"/>
            <MudTextField Class="mb-2" Label="Address" @bind-Value="m_Model.Address" For="@(() => m_Model.Address)"/>
            <MudTextField Class="mb-2" Label="Port" @bind-Value="m_Model.Port" For="@(() => m_Model.Port)"/>
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">
                Submit
            </MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="true">
                Scan for nearby devices
            </MudButton>
        </EditForm>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter] public required MudDialogInstance MudDialog { get; set; }

    readonly Model m_Model = new Model
    {
        Address = "your-controller.home",
        Port = 443,
        Name = "Controller",
        Desc = "A controller"
    };

    public class Model
    {
        [Required(ErrorMessage = "Address is required.")]
        [RegularExpression(@"^(?:(?:[0-9]{1,3}\.){3}[0-9]{1,3}|(?:[a-fA-F0-9:]+:+)+[a-fA-F0-9]+|(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,})$",
            ErrorMessage = "Address must be a valid IPv4, IPv6, or domain name.")]
        public required string Address { get; set; }

        [Required(ErrorMessage = "Port is required.")]
        [Range(1, 65535, ErrorMessage = "Port must be in the range of 1 to 65535.")]
        public required int Port { get; set; }

        [Required(ErrorMessage = "Name is required.")]
        [StringLength(50, MinimumLength = 3, ErrorMessage = "Name must be between 3 and 50 characters long.")]
        public required string Name { get; set; }

        [Required(ErrorMessage = "Description is required.")]
        [StringLength(100, ErrorMessage = "Description must be at most 100 characters long.")]
        public required string Desc { get; set; }
    }

    private void OnValidSubmit(EditContext context)
    {
        MudDialog.Close(DialogResult.Ok(m_Model));
    }
}