services:
  web-app:
    build:
      context: .
      dockerfile: source/Web/WebApp/WebApp/Dockerfile
    ports:
      - "1200:1200"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=1200
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:1200/health" ]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
    depends_on:
      sql-server:
        condition: service_healthy
      redis:
        condition: service_healthy
  sql-server:
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    container_name: "sql-server"
    user: root
    ports:
      - "1300:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=${Sa_Password:-SqlServer1234}
      - MSSQL_PID=Developer
    healthcheck:
      test: [ "CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P ${Sa_Password:-SqlServer1234} -Q 'SELECT 1' -C || exit 1" ]
      interval: 10s
      retries: 3
      timeout: 3s
    volumes:
      - ./docker/mssql-data:/var/opt/mssql/data
      - ./docker/mssql-logs:/var/opt/mssql/log
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes
    ports:
      - "1301:6379"
    volumes:
      - ./docker/redis:/data
    environment:
      - REDIS_REPLICATION_MODE=master
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      retries: 3
      timeout: 3s